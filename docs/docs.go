// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/deductions/k-receipt": {
            "post": {
                "description": "Set K-receipt. K-receipt must be greater than 0 and cannot greater than 100000",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tax"
                ],
                "summary": "Set K-receipt",
                "parameters": [
                    {
                        "description": "k-receipt Request",
                        "name": "admin_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns new k-receipt deduct amount",
                        "schema": {
                            "$ref": "#/definitions/model.AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/deductions/personal": {
            "post": {
                "description": "Set personal deduction. personal deduction must be greater than 10000 and cannot greater than 100000",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tax"
                ],
                "summary": "Set personal deduction",
                "parameters": [
                    {
                        "description": "personal deduct Request",
                        "name": "admin_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns new personal deduct amount",
                        "schema": {
                            "$ref": "#/definitions/model.AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tax/calculations": {
            "post": {
                "description": "Calculates taxes based on total income, withholding tax, and allowances.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tax"
                ],
                "summary": "Calculate taxes",
                "responses": {
                    "200": {
                        "description": "Returns the calculated tax amount",
                        "schema": {
                            "$ref": "#/definitions/model.TaxResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tax/calculations/upload-csv": {
            "post": {
                "description": "Calculates taxes based on total income, withholding tax, and allowances from csv file.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tax"
                ],
                "summary": "Calculate taxes from upload csv file",
                "responses": {
                    "200": {
                        "description": "Returns the calculated tax amount and refund if it has from csv file",
                        "schema": {
                            "$ref": "#/definitions/model.TaxResponseCSVStruct"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Admin": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "model.AdminResponse": {
            "type": "object",
            "properties": {
                "kReceipt": {
                    "type": "number",
                    "minimum": 0
                },
                "personalDeduction": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "model.TaxLevel": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "tax": {
                    "type": "number"
                },
                "taxRefund": {
                    "type": "number"
                }
            }
        },
        "model.TaxResponse": {
            "type": "object",
            "properties": {
                "tax": {
                    "type": "number"
                },
                "taxLevel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TaxLevel"
                    }
                },
                "taxRefund": {
                    "type": "number"
                }
            }
        },
        "model.TaxResponseCSVDataStruct": {
            "type": "object",
            "properties": {
                "tax": {
                    "type": "number",
                    "minimum": 0
                },
                "taxRefund": {
                    "type": "number",
                    "minimum": 0
                },
                "totalIncome": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "model.TaxResponseCSVStruct": {
            "type": "object",
            "properties": {
                "taxes": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/model.TaxResponseCSVDataStruct"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
